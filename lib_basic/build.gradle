apply plugin: 'com.android.library'

android {
    compileSdkVersion build_versions.target_sdk
    buildToolsVersion build_versions.build_tools

    defaultConfig {
        minSdkVersion build_versions.min_sdk
        targetSdkVersion build_versions.target_sdk
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        abortOnError false
    }

}

dependencies {

    api fileTree(dir: 'libs', include: ['*.jar'])

    testImplementation deps.junit
    androidTestImplementation deps.atsl.runner
    androidTestImplementation deps.espresso.core

    /* * * android start * * */

    // Support libraries
    api deps.support.app_compat
    api deps.support.v4
    api deps.support.design
    api deps.support.cardview
    api deps.support.recyclerview
    api deps.support.recyclerview

    // Constraint
    api deps.constraint_layout

    // Dagger
    api deps.dagger.runtime
    api deps.dagger.android
    api deps.dagger.android_support
    annotationProcessor deps.dagger.compiler
    annotationProcessor  deps.dagger.android_support_compiler

    // Lifecycle
    api deps.lifecycle.runtime
    api deps.lifecycle.extensions
    api deps.lifecycle.java8
    annotationProcessor  deps.lifecycle.compiler

    /* * * android end * * */

    /* * * third open source start * * */

    // Gson
    api deps.gson

    // RxJava
    api deps.rxjava2
    api deps.rx_android
    api deps.rx_rxrelay

    // Retrofit
    api deps.retrofit.runtime
    api deps.retrofit.gson
    api deps.retrofit.adapter_rxjava2


    // OkHttp
    api deps.okhttp.okhttp3
    api deps.okhttp.okhttp3_logging_interceptor

    // Glide
    api deps.glide.glide_api
    annotationProcessor deps.glide.glide_compiler

    /* * * third open source end * * */

}
